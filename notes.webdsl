// Notes collection with HTMX interactions

page {
    name "notes-list"
    route "/htmx/notes"
    layout "htmx"
    pipeline {
        lua {
            local result = sqlQuery("SELECT notes.*, employees.name as employee_name FROM notes JOIN employees ON notes.employee_id = employees.id ORDER BY date DESC")
            return { notes = result.rows }
        }
    }
    mustache {
        <div class="container mx-auto p-4">
            <h1 class="text-2xl mb-4">Notes</h1>
            
            <!-- New Note Button -->
            <button class="bg-blue-500 text-white px-4 py-2 rounded mb-4"
                    hx-get="/htmx/notes/new"
                    hx-target="#dialog">
                New Note
            </button>

            <!-- Notes List -->
            <div id="notes-list">
                {{#notes}}
                <div id="note-{{id}}" class="bg-white p-4 rounded shadow mb-2 flex justify-between items-center">
                    <div>
                        <h3 class="font-bold">{{title}}</h3>
                        <p class="text-sm text-gray-600">By {{employee_name}} on {{date}}</p>
                    </div>
                    <div>
                        <button class="text-blue-500 hover:text-blue-700"
                                hx-get="/htmx/notes/edit/{{id}}"
                                hx-target="#dialog">
                            Edit
                        </button>
                        <button class="text-red-500 hover:text-red-700 ml-2"
                                hx-delete="/htmx/notes/delete/{{id}}"
                                hx-target="#note-{{id}}"
                                hx-swap="outerHTML"
                                hx-confirm="Are you sure you want to delete this note?">
                            Delete
                        </button>
                    </div>
                </div>
                {{/notes}}
            </div>

            <!-- Dialog for forms -->
            <div id="dialog"></div>
        </div>
    }
}

// New note form
page {
    name "notes-new"
    route "/htmx/notes/new"
    layout "none"
    pipeline {
        lua {
            local result = sqlQuery("SELECT id, name FROM employees ORDER BY name")
            return { employees = result.rows }
        }
    }
    mustache {
        <form hx-post="/htmx/notes/create" 
              hx-target="#notes-list"
              hx-swap="afterbegin"
              class="bg-white p-4 rounded shadow">
            <h2 class="text-xl mb-4">New Note</h2>
            
            <div class="mb-4">
                <label class="block text-gray-700 mb-2">Title</label>
                <input type="text" name="title" required
                       class="w-full p-2 border rounded">
            </div>
            
            <div class="mb-4">
                <label class="block text-gray-700 mb-2">Employee</label>
                <select name="employee_id" required
                        class="w-full p-2 border rounded">
                    {{#employees}}
                    <option value="{{id}}">{{name}}</option>
                    {{/employees}}
                </select>
            </div>
            
            <div class="mb-4">
                <label class="block text-gray-700 mb-2">Date</label>
                <input type="date" name="date" required
                       class="w-full p-2 border rounded">
            </div>
            
            <div class="flex justify-end">
                <button type="button" 
                        class="bg-gray-300 text-gray-700 px-4 py-2 rounded mr-2"
                        hx-get="/htmx/notes/new"
                        hx-target="#dialog"
                        hx-swap="innerHTML">
                    Cancel
                </button>
                <button type="submit" 
                        class="bg-blue-500 text-white px-4 py-2 rounded">
                    Create Note
                </button>
            </div>
        </form>
    }
}

// Create note endpoint
page {
    name "notes-create"
    route "/htmx/notes/create"
    method "POST"
    layout "none"
    pipeline {
        lua {
            local title = body.title
            local employee_id = body.employee_id
            local date = body.date
            
            local result = sqlQuery(
                "INSERT INTO notes (title, employee_id, date) VALUES ($1, $2, $3) RETURNING id",
                {title, employee_id, date}
            )
            
            if result.rows and result.rows[1] then
                local note = sqlQuery(
                    "SELECT notes.*, employees.name as employee_name FROM notes JOIN employees ON notes.employee_id = employees.id WHERE notes.id = $1",
                    {result.rows[1].id}
                )
                return { note = note.rows[1] }
            end
            return { error = "Failed to create note" }
        }
    }
    mustache {
        {{#note}}
        <div id="note-{{id}}" class="bg-white p-4 rounded shadow mb-2 flex justify-between items-center">
            <div>
                <h3 class="font-bold">{{title}}</h3>
                <p class="text-sm text-gray-600">By {{employee_name}} on {{date}}</p>
            </div>
            <div>
                <button class="text-blue-500 hover:text-blue-700"
                        hx-get="/htmx/notes/edit/{{id}}"
                        hx-target="#dialog">
                    Edit
                </button>
                <button class="text-red-500 hover:text-red-700 ml-2"
                        hx-delete="/htmx/notes/delete/{{id}}"
                        hx-target="#note-{{id}}"
                        hx-swap="outerHTML"
                        hx-confirm="Are you sure you want to delete this note?">
                    Delete
                </button>
            </div>
        </div>
        {{/note}}
    }
}

// Edit note form
page {
    name "notes-edit"
    route "/htmx/notes/edit/:id"
    layout "none"
    pipeline {
        lua {
            local id = params.id
            local note = sqlQuery(
                "SELECT * FROM notes WHERE id = $1",
                {id}
            )
            local employees = sqlQuery("SELECT id, name FROM employees ORDER BY name")
            return { 
                note = note.rows[1],
                employees = employees.rows
            }
        }
    }
    mustache {
        <form hx-put="/htmx/notes/update/{{note.id}}"
              hx-target="#note-{{note.id}}"
              hx-swap="outerHTML"
              class="bg-white p-4 rounded shadow">
            <h2 class="text-xl mb-4">Edit Note</h2>
            
            <div class="mb-4">
                <label class="block text-gray-700 mb-2">Title</label>
                <input type="text" name="title" required
                       value="{{note.title}}"
                       class="w-full p-2 border rounded">
            </div>
            
            <div class="mb-4">
                <label class="block text-gray-700 mb-2">Employee</label>
                <select name="employee_id" required
                        class="w-full p-2 border rounded">
                    {{#employees}}
                    <option value="{{id}}" {{#selected}}selected{{/selected}}>
                        {{name}}
                    </option>
                    {{/employees}}
                </select>
            </div>
            
            <div class="mb-4">
                <label class="block text-gray-700 mb-2">Date</label>
                <input type="date" name="date" required
                       value="{{note.date}}"
                       class="w-full p-2 border rounded">
            </div>
            
            <div class="flex justify-end">
                <button type="button"
                        class="bg-gray-300 text-gray-700 px-4 py-2 rounded mr-2"
                        hx-get="/htmx/notes/edit/{{note.id}}"
                        hx-target="#dialog"
                        hx-swap="innerHTML">
                    Cancel
                </button>
                <button type="submit"
                        class="bg-blue-500 text-white px-4 py-2 rounded">
                    Update Note
                </button>
            </div>
        </form>
    }
}

// Update note endpoint
page {
    name "notes-update"
    route "/htmx/notes/update/:id"
    method "PUT"
    layout "none"
    pipeline {
        lua {
            local id = params.id
            local title = body.title
            local employee_id = body.employee_id
            local date = body.date
            
            sqlQuery(
                "UPDATE notes SET title = $1, employee_id = $2, date = $3 WHERE id = $4",
                {title, employee_id, date, id}
            )
            
            local note = sqlQuery(
                "SELECT notes.*, employees.name as employee_name FROM notes JOIN employees ON notes.employee_id = employees.id WHERE notes.id = $1",
                {id}
            )
            return { note = note.rows[1] }
        }
    }
    mustache {
        {{#note}}
        <div id="note-{{id}}" class="bg-white p-4 rounded shadow mb-2 flex justify-between items-center">
            <div>
                <h3 class="font-bold">{{title}}</h3>
                <p class="text-sm text-gray-600">By {{employee_name}} on {{date}}</p>
            </div>
            <div>
                <button class="text-blue-500 hover:text-blue-700"
                        hx-get="/htmx/notes/edit/{{id}}"
                        hx-target="#dialog">
                    Edit
                </button>
                <button class="text-red-500 hover:text-red-700 ml-2"
                        hx-delete="/htmx/notes/delete/{{id}}"
                        hx-target="#note-{{id}}"
                        hx-swap="outerHTML"
                        hx-confirm="Are you sure you want to delete this note?">
                    Delete
                </button>
            </div>
        </div>
        {{/note}}
    }
}

// Delete note endpoint
page {
    name "notes-delete"
    route "/htmx/notes/delete/:id"
    method "DELETE"
    layout "none"
    pipeline {
        lua {
            local id = params.id
            sqlQuery("DELETE FROM notes WHERE id = $1", {id})
            return {}
        }
    }
    mustache {
        <!-- Empty response as the element will be removed -->
    }
} 