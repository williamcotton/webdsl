layout {
    name "main"
    mustache {
        <!DOCTYPE html>
        <html>
            <head>
                <title>WebDSL {{pageTitle}}</title>
                <link rel="stylesheet" href="/styles.css">
                <script src="https://unpkg.com/htmx.org@1.9.10"></script>
                <script src="https://cdn.tailwindcss.com"></script>
            </head>
            <body>
                <div class="min-h-screen bg-gray-100">
                    <nav class="bg-white shadow">
                        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                            <div class="flex justify-between h-16">
                                <div class="flex">
                                    <div class="flex-shrink-0 flex items-center">
                                        <h1 class="text-xl font-bold">WebDSL</h1>
                                    </div>
                                    <div class="hidden sm:ml-6 sm:flex sm:space-x-8">
                                        <a href="/" class="text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 border-transparent">
                                            Home
                                        </a>
                                        <a href="/blog" class="text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 border-transparent">
                                            Blog
                                        </a>
                                        {{#request.isLoggedIn}}
                                        <a href="/todos" class="text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 border-transparent">
                                            Todos
                                        </a>
                                        {{/request.isLoggedIn}}
                                    </div>
                                </div>
                                <div class="flex items-center">
                                    {{#request.isLoggedIn}}
                                    <p>Logged in as {{request.user.login}}</p>
                                    <form action="/logout" method="POST" class="ml-6">
                                        <button type="submit" class="text-gray-900">
                                            Sign out
                                        </button>
                                    </form>
                                    {{/request.isLoggedIn}}
                                    {{^request.isLoggedIn}}
                                    <a href="/login" class="text-gray-900">
                                        Sign in
                                    </a>
                                    {{/request.isLoggedIn}}
                                </div>
                            </div>
                        </div>
                    </nav>
                    
                    <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
                        <!-- content -->
                    </main>
                </div>
            </body>
        </html>
    }
}

page {
    name "home"
    route "/"
    layout "main"
    mustache {
        <h1>Welcome!</h1>
        <p>
            <a href="/blog">Read our blog</a>
        </p>
        <p>This is a regular paragraph.</p>
    }
}

page {
    name "blog"
    route "/blog"
    layout "main"
    mustache {
        <article>
            <h1>Latest Posts</h1>
            <p>Check out our latest blog posts!</p>
            <div class="post">
                <h2>First Post</h2>
                <p>This is our first blog post using raw HTML.</p>
            </div>
        </article>
    }
}

page {
    name "mustache-test"
    route "/mustache-test"
    layout "blog"
    pipeline {
        jq {
            {
                title: "My Title",
                message: "My Message",
                items: [
                    { name: "Wired up Item 1" },
                    { name: "Wired up Item 2" },
                    { name: "Wired up Item 3" }
                ],
                url: .url,
                version: .version,
                method: .method
            }
        }
    }
    mustache {
        <h1>{{title}}</h1>
        <p>{{message}}</p>
        <p>URL: {{url}}</p>
        <p>Version: {{version}}</p>
        <p>Method: {{method}}</p>
        <ul>
            {{#items}}
            <li>{{name}}</li>
            {{/items}}
        </ul>
    }
}

page {
    name "employeesPage"
    route "/employees"
    layout "main"
    pipeline {
        jq {
            . + {
                sqlParams: [(.query.limit // 20), (.query.offset // 0)]
            }
        }
        sql {
            SELECT * FROM employees
            LIMIT $1
            OFFSET $2
        }
        sql {
            SELECT COUNT(*) FROM employees
        }
        jq {
            . as $root |
            {
                employees: $root.data[0].rows,
                totalCount: $root.data[1].rows[0].count,
                query: [
                    {key: "limit", value: $root.query.limit},
                    {key: "offset", value: $root.query.offset}
                ],
                nextPage: ((($root.query.offset // "0" | tonumber) + ($root.query.limit // "10" | tonumber)) | tostring),
                previousPage: (([0, (($root.query.offset // "0" | tonumber) - ($root.query.limit // "10" | tonumber))] | max) | tostring),
                hasEmployees: ($root.data[0].rows | length > 0),
                hasPreviousPage: ($root.query.offset // "0" | tonumber > 0),
                hasNextPage: ($root.data[0].rows | length >= ($root.query.limit // "10" | tonumber))
            }
        }
    }
    mustache {
        <h2>Employees</h2>
        <p>Total Employees: {{totalCount}}</p>
        {{#query.length}}
        <ul>
            {{#query}}
            <li>{{key}}: {{value}}</li>
            {{/query}}
        </ul>
        {{/query.length}}
        {{#hasEmployees}}
        <ul>
            {{#employees}}
            <li>{{name}}</li>
            {{/employees}}
        </ul>
        {{#hasPreviousPage}}
        <a href="/employees?limit=10&offset={{previousPage}}">Previous Page</a>
        {{/hasPreviousPage}}
        {{#hasNextPage}}
        <a href="/employees?limit=10&offset={{nextPage}}">Next Page</a>
        {{/hasNextPage}}
        {{/hasEmployees}}
        {{^hasEmployees}}
        <p>No employees found.</p>
        {{/hasEmployees}}
    }
}

page {
    name "employeeForm"
    route "/employee/new"
    layout "main"
    html {
        <form action="/employees/create" method="POST">
            <div class="form-group">
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="team_id">Team ID:</label>
                <input type="number" id="team_id" name="team_id">
            </div>
            <button type="submit">Add Employee</button>
        </form>
    }
}

page {
    route "/employees/create"
    method "POST"
    layout "main"
    fields {
        "name" {
            type "string"
            required true
            length 10..100
        }
        "email" {
            type "string"
            required true
            format "email"
        }
        "team_id" {
            type "number"
            required false
        }
    }
    pipeline {
        lua {
            local name = body.name
            local email = body.email
            local team_id = body.team_id
            
            if team_id then
                team_id = tonumber(team_id)
            end
            
            -- Return params array for SQL step
            return {
                sqlParams = {name, email, team_id}
            }
        }
        
        executeQuery "insertEmployee"
        
        jq {
            {
                success: true,
                employee: {
                    id: .data[0].rows[0].id,
                    name: .data[0].rows[0].name,
                    email: .data[0].rows[0].email,
                    team_id: .data[0].rows[0].team_id
                },
                request: .
            }
        }
    }
    redirect "/employees"
}

styles {
    css {
        body {
            background: #ffffff;
            color: #333;
        }
        h1 {
            color: #ff6600;
        }
    }
}