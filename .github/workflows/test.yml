name: Test Suite

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-ubuntu:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: express-test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang \
          libmicrohttpd-dev \
          libpq-dev \
          libjansson-dev \
          libjq-dev \
          liblua5.4-dev \
          postgresql-client \
          uthash-dev \
          libbsd-dev \
          libcurl4-openssl-dev \
          valgrind \
          libargon2-dev

    - name: Run linter
      run: make lint

    - name: Run test analyze
      run: make test-analyze

    - name: Run tests
      run: make test
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        PGDATABASE: express-test

    - name: Run test leaks
      run: make test-leaks
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        PGDATABASE: express-test

  test-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        brew install \
          llvm \
          postgresql@14 \
          libmicrohttpd \
          jansson \
          jq \
          lua \
          uthash \
          libbsd \
          openssl \
          curl \
          argon2
    - name: Start PostgreSQL
      run: |
        brew services start postgresql@14
        sleep 5
        /opt/homebrew/opt/postgresql@14/bin/createuser -s postgres
        /opt/homebrew/opt/postgresql@14/bin/createdb express-test -U postgres

    - name: Run linter
      run: make lint

    - name: Run test analyze
      run: make test-analyze

    - name: Run tests
      run: make test
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        PGDATABASE: express-test

    - name: Run test leaks
      run: make test-leaks
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        PGDATABASE: express-test

    - name: Stop PostgreSQL
      if: always()
      run: brew services stop postgresql@14
